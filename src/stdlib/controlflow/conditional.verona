class FalseBranch {}

class if
{
  [T](cond: ()->Bool): (()->T)->(Done[T] | FalseBranch)
  {
    { ontrue =>
      match (cond())
      {
        { true => Done(ontrue()) }
        { false => FalseBranch }
      }
    }
  }
}

elseif[T, U](prev: Done[T] | FalseBranch, cond: ()->Bool):
  (()->U)->(Done[T] | Done[U])
{
  { ontrue =>
    prev else { if cond ontrue }
  }
}

else[T, U](prev: Done[T] | FalseBranch, onfalse: ()->U): Done[T] | Done[U]
{
  match prev
  {
    { (FalseBranch) => Done(onfalse()) }
    { v: Done[T] => v }
  }
}

// else[T, U](prev: Done[T] | FalseBranch, _: if):
//   (()->Bool)->(()->U)->(Done[T] | Done[U])
// {
//   { cond =>
//     { ontrue =>
//       prev else { if cond ontrue }
//     }
//   }
// }
