resources:
- repo: self

trigger: none

pr:
- master

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master

jobs:
############################################## Linux Builds
- job:
  displayName: Linux
  pool:
    vmImage: 'ubuntu-18.04'
  timeoutInMinutes: 120
  strategy:
    matrix:
      GCC Debug:
        CC: gcc
        CXX: g++
        CXXFLAGS:
        BuildType: Debug
        Asan: Off
      GCC Release:
        CC: gcc
        CXX: g++
        CXXFLAGS:
        Asan: Off
        BuildType: Release
      Clang Debug:
        CC: clang
        CXX: clang++
        CXXFLAGS: -stdlib=libstdc++
        BuildType: Debug
        Asan: Off
      Clang Release:
        CC: clang
        CXX: clang++
        CXXFLAGS: -stdlib=libstdc++
        Asan: Off
        BuildType: Release
      Clang Debug (ASAN):
        CC: clang
        CXX: clang++
        CXXFLAGS: -stdlib=libstdc++
        BuildType: Debug
        Asan: On
      Clang Release (ASAN):
        CC: clang
        CXX: clang++
        CXXFLAGS: -stdlib=libstdc++
        BuildType: Release
        Asan: On
  steps:
  - checkout: self

  - script: |
      set -eo pipefail
      git submodule init
      git submodule update --depth 1 --recursive
    displayName: 'Checkout submodules'

  - script: |
      set -eo pipefail
      sudo apt-get update
      sudo apt-get install -y ninja-build
      sudo apt-get remove --purge cmake
      sudo snap install cmake --classic
      sudo pip install wheel OutputCheck
    displayName: 'Dependencies'

  - task: CMake@1
    displayName: 'CMake'
    inputs:
      cmakeArgs: |
        .. -GNinja -DCMAKE_BUILD_TYPE=$(BuildType) -DCMAKE_CXX_FLAGS=$(CXXFLAGS) -DENABLE_ASSERTS=ON -DUSE_ASAN=$(Asan) -DVERONA_CI_BUILD=On -DRT_TESTS=ON

  - script: |
      set -eo pipefail
      ninja
    workingDirectory: build
    displayName: 'Compile'

  - script: |
      set -eo pipefail
      export ASAN_SYMBOLIZER_PATH=/usr/lib/llvm-6.0/bin/llvm-symbolizer
      export ASAN_OPTIONS="alloc_dealloc_mismatch=0 symbolize=1"
      ninja check
    workingDirectory: build
    displayName: 'Tests'

############################################## Windows Builds
- job:
  displayName: Windows
  pool:
    vmImage: 'windows-2019'
  timeoutInMinutes: 120
  strategy:
    matrix:
      RelWithDebInfo:
        CXXFLAGS: '/EHsc /D _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING=1'
        BuildType: RelWithDebInfo
      Release:
        CXXFLAGS: '/EHsc /D _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING=1'
        BuildType: Release

  steps:
  - checkout: self

  - script: |
      git submodule init
      git submodule update --depth 1 --recursive
    displayName: 'Checkout submodules'

  - script:
      pip install OutputCheck
    displayName: 'Dependencies'


  - script: |
      mkdir build
      cd build
      cmake .. -G"Visual Studio 16 2019" -DENABLE_ASSERTS=ON -DVERONA_CI_BUILD=On -DRT_TESTS=ON -DCMAKE_CXX_FLAGS="$(CXXFLAGS)"
    displayName: 'CMake'

  - task: MSBuild@1
    displayName: 'Compile'
    inputs:
      solution: build/verona.sln
      msbuildArguments: '/m /p:Configuration=$(BuildType)'

  - task: MSBuild@1
    displayName: 'Test'
    inputs:
      solution: build/check.vcxproj
      msbuildArguments: '/m /p:Configuration=$(BuildType)'

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'
    inputs:
      failOnAlert: true

############################################## MacOS Builds
- job:
  displayName: macOS
  pool:
    vmImage: 'macOS-10.14'
  timeoutInMinutes: 120
  strategy:
    matrix:
      Debug:
        BuildType: Debug
      Release:
        BuildType: Release

  steps:
  - checkout: self

  - script: |
      set -eo pipefail
      git submodule init
      git submodule update --depth 1 --recursive
    displayName: 'Checkout submodules'

  - script: |
      set -eo pipefail
      sudo pip install wheel OutputCheck
    displayName:  'Dependencies'

  - task: CMake@1
    displayName: 'CMake'
    inputs:
      cmakeArgs: |
        .. -DCMAKE_BUILD_TYPE=$(BuildType) -DENABLE_ASSERTS=ON -DVERONA_CI_BUILD=On -DRT_TESTS=ON

  - script: |
      set -eo pipefail
      N=$(sysctl -n hw.ncpu)
      make -j $N
    workingDirectory: build
    displayName: 'Compile'

  - script: |
      set -eo pipefail
      make check
    workingDirectory: build/
    displayName: 'Tests'
