# GitHub workflow which checks for updates in the snmalloc submodule.
# If it is out-of-date and no issue exists yet, it creates one.
# This triggers periodically, when pushing to master, or when creating a PR.
#
# The latter case never creates an issue, and only serves as a way to check
# that we are still able to retrieve the submodule revision (eg. in case the PR
# moved the submodule). PRs are *not* blocked by an outdated snmalloc.

name: Check for snmalloc updates

# The environment variables below should be the only configuration that ever
# needs changing. In particular if the submodule is moved then SUBMODULE_KEY
# may need to be updated.
env:
  # This is the key used for this submodule in .gitmodules
  # Most of the time it will match the path
  SUBMODULE_KEY: src/rt/external/snmalloc
  # Used for the title of issues.
  SUBMODULE_NAME: snmalloc
  # Used to avoid duplicated issues.
  ISSUE_LABEL: update-snmalloc

on:
  push:
    branches: [master]
  pull_request:
  schedule:
    - cron: '0 */6 * * *'

jobs:
  check-updates:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: 'Check revisions'
      run: |
        set -u
        # We use the .gitmodules to find the path, URL and branch for the
        # submodule. Branch might not be defined, in which case HEAD is used
        # instead. That will cause upstream's default branch to be used instead.
        #
        SUBMODULE_PATH=$(
          git config --blob HEAD:.gitmodules --get "submodule.$SUBMODULE_KEY.path" \
          || (echo >&2 "Cannot find submodule \`$SUBMODULE_KEY\`."; exit 1)
        )
        REMOTE_URL=$(git config --blob HEAD:.gitmodules --get "submodule.$SUBMODULE_KEY.url")
        REMOTE_BRANCH=$(git config --blob HEAD:.gitmodules --get "submodule.$SUBMODULE_KEY.branch" || echo HEAD)

        REMOTE_REV=$(git ls-remote $REMOTE_URL $REMOTE_BRANCH | awk '{ print $1 }')
        LOCAL_REV=$(git ls-tree HEAD $SUBMODULE_PATH | awk '{ print $3 }')

        # Export these so they can be used in the rest of the job.
        echo ::set-env name=SUBMODULE_PATH::$SUBMODULE_PATH
        echo ::set-env name=REMOTE_REV::$REMOTE_REV
        echo ::set-env name=REMOTE_SHORT_REV::$(git rev-parse --short $REMOTE_REV)
        echo ::set-env name=LOCAL_REV::$LOCAL_REV
        echo ::set-env name=LOCAL_SHORT_REV::$(git rev-parse --short $LOCAL_REV)

        echo "Submodule path: $SUBMODULE_PATH"
        echo "Local revision: $LOCAL_REV"
        echo "Remote URL: $REMOTE_URL"
        echo "Remote revision: $REMOTE_REV"

    - if: |
        env.LOCAL_REV != env.REMOTE_REV &&
          (github.event_name == 'schedule' || github.event_name == 'push')

      name: Create issue
      uses: actions/github-script@0.4.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const label=process.env.ISSUE_LABEL;
          const submodule_name=process.env.SUBMODULE_NAME;
          const submodule_path=process.env.SUBMODULE_PATH;
          const local_rev=process.env.LOCAL_SHORT_REV;
          const remote_rev=process.env.REMOTE_SHORT_REV;
          const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/')

          const existingIssues = (await github.issues.listForRepo({
            owner: owner,
            repo: repo,
            state: 'open',
            labels: [label],
          })).data;

          if (existingIssues.length == 0) {
            await github.issues.create({
              owner: owner,
              repo: repo,
              title: `${submodule_name} is out-of-date`,
              body:
          `Submodule at path \`${submodule_path}\` is at revision\
          \`${local_rev}\`, whereas upstream is at revision \`${remote_rev}\`.

          You can update the submodule by running:

              git submodule update --remote ${submodule_path}
          `,
              labels: [label]
            })
          } else {
            const issueNumber=existingIssues[0].number;
            console.log(`Already found open issue #${issueNumber} with label \`${label}\`, skipping ...`);
          }
