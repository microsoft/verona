module @__  {
  func @"____$module-0__foo"() {
    %0 = memref.alloca() : memref<1xi8>
    %c10_i64 = constant 10 : i64
    %1 = trunci %c10_i64 : i64 to i8
    %c0 = constant 0 : index
    %2 = memref.load %0[%c0] : memref<1xi8>
    %c0_0 = constant 0 : index
    memref.store %1, %0[%c0_0] : memref<1xi8>
    %3 = memref.alloca() : memref<1xi16>
    %c123123_i64 = constant 123123 : i64
    %4 = trunci %c123123_i64 : i64 to i16
    %c0_1 = constant 0 : index
    %5 = memref.load %3[%c0_1] : memref<1xi16>
    %c0_2 = constant 0 : index
    memref.store %4, %3[%c0_2] : memref<1xi16>
    %6 = memref.alloca() : memref<1xi32>
    %c2000000000_i64 = constant 2000000000 : i64
    %7 = trunci %c2000000000_i64 : i64 to i32
    %c0_3 = constant 0 : index
    %8 = memref.load %6[%c0_3] : memref<1xi32>
    %c0_4 = constant 0 : index
    memref.store %7, %6[%c0_4] : memref<1xi32>
    %9 = memref.alloca() : memref<1xi64>
    %c4999999999_i64 = constant 4999999999 : i64
    %c0_5 = constant 0 : index
    %10 = memref.load %9[%c0_5] : memref<1xi64>
    %c0_6 = constant 0 : index
    memref.store %c4999999999_i64, %9[%c0_6] : memref<1xi64>
    %11 = memref.alloca() : memref<1xi128>
    %c1234567890_i64 = constant 1234567890 : i64
    %12 = sexti %c1234567890_i64 : i64 to i128
    %c0_7 = constant 0 : index
    %13 = memref.load %11[%c0_7] : memref<1xi128>
    %c0_8 = constant 0 : index
    memref.store %12, %11[%c0_8] : memref<1xi128>
    %14 = memref.alloca() : memref<1xf32>
    %cst = constant 3.141500e+20 : f64
    %15 = fptrunc %cst : f64 to f32
    %c0_9 = constant 0 : index
    %16 = memref.load %14[%c0_9] : memref<1xf32>
    %c0_10 = constant 0 : index
    memref.store %15, %14[%c0_10] : memref<1xf32>
    %17 = memref.alloca() : memref<1xf64>
    %cst_11 = constant 3.141500e+123 : f64
    %c0_12 = constant 0 : index
    %18 = memref.load %17[%c0_12] : memref<1xf64>
    %c0_13 = constant 0 : index
    memref.store %cst_11, %17[%c0_13] : memref<1xf64>
    return
  }
}
