module @__  {
  func @"____$module-0__Math__getTruth"() -> i64 {
    %c42_i64 = constant 42 : i64
    %c1_i32 = constant 1 : i32
    %0 = llvm.alloca %c1_i32 x i64 : (i32) -> !llvm.ptr<i64>
    %c0_i32 = constant 0 : i32
    %1 = llvm.getelementptr %0[%c0_i32] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %2 = llvm.load %1 : !llvm.ptr<i64>
    %c0_i32_0 = constant 0 : i32
    %3 = llvm.getelementptr %0[%c0_i32_0] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    llvm.store %c42_i64, %3 : !llvm.ptr<i64>
    %c0_i32_1 = constant 0 : i32
    %4 = llvm.getelementptr %0[%c0_i32_1] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %5 = llvm.load %4 : !llvm.ptr<i64>
    return %5 : i64
  }
  func @"____$module-0__Math__getRandom"() -> i64 {
    %c1_i64 = constant 1 : i64
    %c1_i32 = constant 1 : i32
    %0 = llvm.alloca %c1_i32 x i64 : (i32) -> !llvm.ptr<i64>
    %c0_i32 = constant 0 : i32
    %1 = llvm.getelementptr %0[%c0_i32] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %2 = llvm.load %1 : !llvm.ptr<i64>
    %c0_i32_0 = constant 0 : i32
    %3 = llvm.getelementptr %0[%c0_i32_0] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    llvm.store %c1_i64, %3 : !llvm.ptr<i64>
    %c0_i32_1 = constant 0 : i32
    %4 = llvm.getelementptr %0[%c0_i32_1] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %5 = llvm.load %4 : !llvm.ptr<i64>
    return %5 : i64
  }
  func @"____$module-0__bar"() -> i64 {
    %c1_i32 = constant 1 : i32
    %0 = llvm.alloca %c1_i32 x i64 : (i32) -> !llvm.ptr<i64>
    %1 = call @"____$module-0__Math__getRandom"() : () -> i64
    %c0_i32 = constant 0 : i32
    %2 = llvm.getelementptr %0[%c0_i32] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %3 = llvm.load %2 : !llvm.ptr<i64>
    %c0_i32_0 = constant 0 : i32
    %4 = llvm.getelementptr %0[%c0_i32_0] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    llvm.store %1, %4 : !llvm.ptr<i64>
    %c0_i32_1 = constant 0 : i32
    %5 = llvm.getelementptr %0[%c0_i32_1] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %6 = llvm.load %5 : !llvm.ptr<i64>
    return %6 : i64
  }
  func @"____$module-0__foo"(%arg0: i64) -> i64 {
    %c1_i32 = constant 1 : i32
    %0 = llvm.alloca %c1_i32 x i64 : (i32) -> !llvm.ptr<i64>
    %c0_i32 = constant 0 : i32
    %1 = llvm.getelementptr %0[%c0_i32] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    llvm.store %arg0, %1 : !llvm.ptr<i64>
    %c1_i32_0 = constant 1 : i32
    %2 = llvm.alloca %c1_i32_0 x i64 : (i32) -> !llvm.ptr<i64>
    %3 = call @"____$module-0__bar"() : () -> i64
    %c0_i32_1 = constant 0 : i32
    %4 = llvm.getelementptr %2[%c0_i32_1] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %5 = llvm.load %4 : !llvm.ptr<i64>
    %c0_i32_2 = constant 0 : i32
    %6 = llvm.getelementptr %2[%c0_i32_2] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    llvm.store %3, %6 : !llvm.ptr<i64>
    %c1_i32_3 = constant 1 : i32
    %7 = llvm.alloca %c1_i32_3 x i64 : (i32) -> !llvm.ptr<i64>
    %c0_i32_4 = constant 0 : i32
    %8 = llvm.getelementptr %2[%c0_i32_4] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %9 = llvm.load %8 : !llvm.ptr<i64>
    %c0_i32_5 = constant 0 : i32
    %10 = llvm.getelementptr %0[%c0_i32_5] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %11 = llvm.load %10 : !llvm.ptr<i64>
    %12 = addi %9, %11 : i64
    %c0_i32_6 = constant 0 : i32
    %13 = llvm.getelementptr %7[%c0_i32_6] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %14 = llvm.load %13 : !llvm.ptr<i64>
    %c0_i32_7 = constant 0 : i32
    %15 = llvm.getelementptr %7[%c0_i32_7] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    llvm.store %12, %15 : !llvm.ptr<i64>
    %c0_i32_8 = constant 0 : i32
    %16 = llvm.getelementptr %7[%c0_i32_8] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %17 = llvm.load %16 : !llvm.ptr<i64>
    return %17 : i64
  }
  func @main() -> i64 {
    %c1_i32 = constant 1 : i32
    %0 = llvm.alloca %c1_i32 x !llvm.struct<"Math", (i64, i64)> : (i32) -> !llvm.ptr<struct<"Math", (i64, i64)>>
    %1 = call @"____$module-0__Math__getTruth"() : () -> i64
    %c1_i32_0 = constant 1 : i32
    %2 = llvm.alloca %c1_i32_0 x i64 : (i32) -> !llvm.ptr<i64>
    %c0_i32 = constant 0 : i32
    %3 = llvm.getelementptr %2[%c0_i32] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %4 = llvm.load %3 : !llvm.ptr<i64>
    %c0_i32_1 = constant 0 : i32
    %5 = llvm.getelementptr %2[%c0_i32_1] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    llvm.store %1, %5 : !llvm.ptr<i64>
    %c0_i32_2 = constant 0 : i32
    %c0_i32_3 = constant 0 : i32
    %6 = llvm.getelementptr %0[%c0_i32_2, %c0_i32_3] : (!llvm.ptr<struct<"Math", (i64, i64)>>, i32, i32) -> !llvm.ptr<i64>
    %c0_i32_4 = constant 0 : i32
    %7 = llvm.getelementptr %2[%c0_i32_4] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %8 = llvm.load %7 : !llvm.ptr<i64>
    %9 = llvm.load %6 : !llvm.ptr<i64>
    llvm.store %8, %6 : !llvm.ptr<i64>
    %c0_i32_5 = constant 0 : i32
    %c1_i32_6 = constant 1 : i32
    %10 = llvm.getelementptr %0[%c0_i32_5, %c1_i32_6] : (!llvm.ptr<struct<"Math", (i64, i64)>>, i32, i32) -> !llvm.ptr<i64>
    %c0_i32_7 = constant 0 : i32
    %11 = llvm.getelementptr %2[%c0_i32_7] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %12 = llvm.load %11 : !llvm.ptr<i64>
    %c0_i32_8 = constant 0 : i32
    %13 = llvm.getelementptr %2[%c0_i32_8] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %14 = llvm.load %13 : !llvm.ptr<i64>
    %15 = addi %12, %14 : i64
    %16 = llvm.load %10 : !llvm.ptr<i64>
    llvm.store %15, %10 : !llvm.ptr<i64>
    %c1_i32_9 = constant 1 : i32
    %17 = llvm.alloca %c1_i32_9 x i64 : (i32) -> !llvm.ptr<i64>
    %c21_i64 = constant 21 : i64
    %c1_i32_10 = constant 1 : i32
    %18 = llvm.alloca %c1_i32_10 x i64 : (i32) -> !llvm.ptr<i64>
    %c0_i32_11 = constant 0 : i32
    %19 = llvm.getelementptr %18[%c0_i32_11] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %20 = llvm.load %19 : !llvm.ptr<i64>
    %c0_i32_12 = constant 0 : i32
    %21 = llvm.getelementptr %18[%c0_i32_12] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    llvm.store %c21_i64, %21 : !llvm.ptr<i64>
    %c0_i32_13 = constant 0 : i32
    %22 = llvm.getelementptr %18[%c0_i32_13] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %23 = llvm.load %22 : !llvm.ptr<i64>
    %24 = call @"____$module-0__foo"(%23) : (i64) -> i64
    %c0_i32_14 = constant 0 : i32
    %25 = llvm.getelementptr %17[%c0_i32_14] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %26 = llvm.load %25 : !llvm.ptr<i64>
    %c0_i32_15 = constant 0 : i32
    %27 = llvm.getelementptr %17[%c0_i32_15] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    llvm.store %24, %27 : !llvm.ptr<i64>
    %c1_i32_16 = constant 1 : i32
    %28 = llvm.alloca %c1_i32_16 x i64 : (i32) -> !llvm.ptr<i64>
    %c0_i32_17 = constant 0 : i32
    %c0_i32_18 = constant 0 : i32
    %29 = llvm.getelementptr %0[%c0_i32_17, %c0_i32_18] : (!llvm.ptr<struct<"Math", (i64, i64)>>, i32, i32) -> !llvm.ptr<i64>
    %c0_i32_19 = constant 0 : i32
    %30 = llvm.getelementptr %17[%c0_i32_19] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %31 = llvm.load %30 : !llvm.ptr<i64>
    %32 = llvm.load %29 : !llvm.ptr<i64>
    %33 = addi %31, %32 : i64
    %c0_i32_20 = constant 0 : i32
    %34 = llvm.getelementptr %28[%c0_i32_20] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %35 = llvm.load %34 : !llvm.ptr<i64>
    %c0_i32_21 = constant 0 : i32
    %36 = llvm.getelementptr %28[%c0_i32_21] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    llvm.store %33, %36 : !llvm.ptr<i64>
    %c1_i32_22 = constant 1 : i32
    %37 = llvm.alloca %c1_i32_22 x i64 : (i32) -> !llvm.ptr<i64>
    %c0_i32_23 = constant 0 : i32
    %c1_i32_24 = constant 1 : i32
    %38 = llvm.getelementptr %0[%c0_i32_23, %c1_i32_24] : (!llvm.ptr<struct<"Math", (i64, i64)>>, i32, i32) -> !llvm.ptr<i64>
    %c0_i32_25 = constant 0 : i32
    %39 = llvm.getelementptr %28[%c0_i32_25] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %40 = llvm.load %39 : !llvm.ptr<i64>
    %41 = llvm.load %38 : !llvm.ptr<i64>
    %42 = addi %40, %41 : i64
    %c0_i32_26 = constant 0 : i32
    %43 = llvm.getelementptr %37[%c0_i32_26] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %44 = llvm.load %43 : !llvm.ptr<i64>
    %c0_i32_27 = constant 0 : i32
    %45 = llvm.getelementptr %37[%c0_i32_27] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    llvm.store %42, %45 : !llvm.ptr<i64>
    %c0_i32_28 = constant 0 : i32
    %46 = llvm.getelementptr %37[%c0_i32_28] : (!llvm.ptr<i64>, i32) -> !llvm.ptr<i64>
    %47 = llvm.load %46 : !llvm.ptr<i64>
    return %47 : i64
  }
}
