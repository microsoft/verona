// Copyright Microsoft and Project Verona Contributors.
// SPDX-License-Identifier: MIT

// This for loop

for_sum(x: List) : U32
{
  let sum: U32 = 0;
  // `a` is a local variable in the loop's context
  // `x.values()` is any expression that yields an iterator
  for (let a in x.values()) {
    sum = sum + a;
  }
  return sum;
}

// maps to this while loop

while_sum(x: List) : U32
{
  let sum: U32 = 0;
  // The iterator will have a hygienic name in the compiler
  let iter = x.values();
  // This is the while version of that for loop
  while(iter.has_value())
  {
    // This has to be `a`, same as in the for loop above
    let a = iter.apply();
    // Increments the iterator (move this before apply?)
    iter.next();
    // This is the body of the for loop
    sum = sum + a;
  }
  return sum;
}
