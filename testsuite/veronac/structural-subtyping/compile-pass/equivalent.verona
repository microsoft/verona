// Copyright Microsoft and Project Verona Contributors.
// SPDX-License-Identifier: MIT
class Main { main() { } }

interface I1 {
  get(self: mut): I1;
}

interface I2 {
  get(self: mut): I2;
}

// Invariant because of its field
interface Invariant[X] { f: X; }

// All classes are invariant
class Concrete[X] { }

// I1 and I2 are equivalent, i.e. they are subtypes of each other
static_assert(I1 subtype I2);
static_assert(I2 subtype I1);

static_assert(Invariant[I1] subtype Invariant[I2]);
static_assert(Concrete[I1] subtype Concrete[I2]);
