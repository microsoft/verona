// Copyright Microsoft and Project Verona Contributors.
// SPDX-License-Identifier: MIT
class A {
  create(): A & iso { new A }
}

class Cell[X] {
  value: X | (None & imm);

  create(value: X | (None & imm)): (Cell[X] & iso) {
    var cell = new Cell;
    cell.value = value;
    cell
  }
}

class Main {
  run(
    left: (Cell[A & iso] & mut),
    right: (Cell[A & iso] & mut),
    choose: U64 & imm) {

    var x = A.create();
    if choose {
      left.value = x;
    } else {
      right.value = x;
    };
  }

  main()
  {
    var left = Cell.create(None.create());
    var right = Cell.create(None.create());

    // CHECK: Cell\[.*\]
    // CHECK: Cell\[.*\]
    Main.run(mut-view left, mut-view right, 1);
    Builtin.print1("{}\n", mut-view left);
    Builtin.print1("{}\n", mut-view right);

    // CHECK: Cell\[.*\]
    // CHECK: Cell\[.*\]
    Main.run(mut-view left, mut-view right, 0);
    Builtin.print1("{}\n", mut-view left);
    Builtin.print1("{}\n", mut-view right);
  }
}
