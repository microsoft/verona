// Copyright Microsoft and Project Verona Contributors.
// SPDX-License-Identifier: MIT

class Generic[Value]
{
  f: Value;

  // TODO self: should be readonly once supported
  // CHECK-L: finalisers.verona:${LINE:+1}:3: error: Finaliser should have no parameters in class Generic
  final(self: mut, fail: Value)
  { 
    Builtin.print("Finish1\n");
  }
}

class NonGeneric
{
  f: U64;

  // TODO self: should be readonly once supported
  // CHECK-L: finalisers.verona:${LINE:+1}:3: error: Finaliser should have no parameters in class NonGeneric
  final(self: mut, fail: U64)
  { 
    Builtin.print("Finish2\n");
  }
}

class Generic2[Value]
{
  f: Value;

  // TODO self: should be readonly once supported
  // CHECK-L: finalisers.verona:${LINE:+1}:3: error: Finaliser should not take generic parameters in class Generic2
  final[Value2](self : mut)
  {
    Builtin.print("Finish3\n");
  }
}

class NonGeneric2
{
  f: U64;

  // TODO self: should be readonly once supported
  // CHECK-L: finalisers.verona:${LINE:+1}:3: error: Finaliser should not take generic parameters in class NonGeneric2
  final[Value2](self: mut)
  { 
    Builtin.print("Finish4\n");
  }
}

class Main
{
  main()
  {
    var a = new NonGeneric;
    var b = new NonGeneric2;
    var c = new Generic;
    var d = new Generic2;
  }
}
