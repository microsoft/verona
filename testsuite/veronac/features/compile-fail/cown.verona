// Copyright Microsoft and Project Verona Contributors.
// SPDX-License-Identifier: MIT
class IsoHolder 
{
  contents: iso & None;

  mk_cown_fail (self: iso): cown[None] & imm
  {
    // This is supposed to fail, but the compiler treats iso(x) <: iso(none).
    cown.create(self.contents)
  }
}

class Cown {
  // CHECK-L: cown.verona:${LINE:+1}:3: error: Inference failed for method cown_fail
  cown_fail(x: None & imm): None & imm
  {
    var a = cown.create(x);
    None.create()
  }
}

class Main 
{
  main()
  {
  }
}
