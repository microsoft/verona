// Copyright Microsoft and Project Verona Contributors.
// SPDX-License-Identifier: MIT
interface IHasFoo
{
  foo();
}

class A[X: IHasFoo] { }

class Test[X]
{
  // CHECK-L: type-argument-bounds.verona:${LINE:+1}:7: error: Type argument '(U64 & imm(none))' for 'A' does not satisfy its bound 'IHasFoo'
  f1: A[U64 & imm];
  // CHECK-L: type-argument-bounds.verona:${LINE:+1}:7: error: Type argument 'X' for 'A' does not satisfy its bound 'IHasFoo'
  f2: A[X];


  // CHECK-L: type-argument-bounds.verona:${LINE:+1}:9: error: Type argument '(U64 & imm(none))' for 'A' does not satisfy its bound 'IHasFoo'
  m1(x: A[U64 & imm]) { }
  // CHECK-L: type-argument-bounds.verona:${LINE:+1}:9: error: Type argument 'X' for 'A' does not satisfy its bound 'IHasFoo'
  m2(x: A[X]) { }
  // CHECK-L: type-argument-bounds.verona:${LINE:+1}:12: error: Type argument 'Y' for 'A' does not satisfy its bound 'IHasFoo'
  m3[Y](x: A[Y]) { }
  // CHECK-L: type-argument-bounds.verona:${LINE:+1}:9: error: Type argument '(U64 & imm(none))' for 'A' does not satisfy its bound 'IHasFoo'
  m4[Y: A[U64 & imm]]() { }
}

class Main
{
  main() { }
}
