// Copyright Microsoft and Project Verona Contributors.
// SPDX-License-Identifier: MIT
class A { }
class Cell { value: A & iso; }
class GenericCell[X] { value: X; }

class Main {
  main() { }

  read_from_mut(cell: Cell & mut): A & iso {
    cell.value
  }

  read_from_iso(cell: Cell & iso): A & iso {
    cell.value
  }

  read_from_imm(cell: Cell & imm): A & imm {
    cell.value
  }

  read_from_union(cell: Cell & (iso | mut | imm)): A & (iso | imm) {
    cell.value
  }

  read_from_generic[X](cell: GenericCell[X] & mut): X {
    cell.value
  }

  read_from_generic_capability[X, K](cell: GenericCell[X] & K & (iso | mut | imm)): K->X {
    cell.value
  }
}
