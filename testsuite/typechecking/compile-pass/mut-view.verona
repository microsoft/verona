// Copyright Microsoft and Project Verona Contributors.
// SPDX-License-Identifier: MIT
class A { f: A & iso; }

class Main
{
  main() { }
  id[X](x: X): X { x }

  test1(): A & mut {
    var x = mut-view (new A);
    var y = mut-view x;
    y
  }

  test2(): A & mut {
    // Passing through id[X]: X -> X forces the use of an inference variable.
    var x = new A;
    var y = mut-view (Main.id(x));
    y
  }

  test3(x: A & iso): A & (mut | iso)
  {
    // Looking for a fixed-point, with a combination of mut-view and field
    // lookup.
    var current = mut-view x;
    while 1
    {
      current = mut-view (current.f);
    };
    x
  }

  test4(x: A & (mut | iso)): A & mut
  {
    mut-view x
  }
}
