module @"$module" {
  func @foo(!verona.class<"S32">) attributes {class = !verona.class<"$module">}
  func @f(%arg0: !verona.class<"U64">) attributes {class = !verona.class<"$module">} {
    %0 = "verona.constant(0)"() : () -> !verona.class<"int">
    %1 = "verona.cast"(%0) : (!verona.class<"int">) -> !verona.class<"S32">
    %2 = "verona.cast"(%1) : (!verona.class<"S32">) -> !verona.unknown
    br ^bb1(%2 : !verona.unknown)
  ^bb1(%3: !verona.unknown):  // 2 preds: ^bb0, ^bb2
    %4 = verona.call "has_value"[%arg0 : !verona.class<"U64">] ( : ) : !verona.unknown
    %5 = "verona.cast"(%4) : (!verona.unknown) -> i1
    cond_br %5, ^bb2(%3 : !verona.unknown), ^bb3(%3 : !verona.unknown)
  ^bb2(%6: !verona.unknown):  // pred: ^bb1
    %7 = verona.call "apply"[%arg0 : !verona.class<"U64">] ( : ) : !verona.unknown
    %8 = verona.call "next"[%arg0 : !verona.class<"U64">] ( : ) : !verona.unknown
    %9 = verona.call "foo"[%7 : !verona.unknown] ( : ) : !verona.unknown
    br ^bb1(%7 : !verona.unknown)
  ^bb3(%10: !verona.unknown):  // pred: ^bb1
    return
  }
  func @f2(%arg0: !verona.class<"U64">) attributes {class = !verona.class<"$module">} {
    %0 = "verona.constant(0)"() : () -> !verona.class<"int">
    %1 = "verona.cast"(%0) : (!verona.class<"int">) -> !verona.class<"S32">
    %2 = "verona.cast"(%1) : (!verona.class<"S32">) -> !verona.unknown
    br ^bb1(%2 : !verona.unknown)
  ^bb1(%3: !verona.unknown):  // 3 preds: ^bb0, ^bb6, ^bb7
    %4 = verona.call "has_value"[%arg0 : !verona.class<"U64">] ( : ) : !verona.unknown
    %5 = "verona.cast"(%4) : (!verona.unknown) -> i1
    cond_br %5, ^bb2(%3 : !verona.unknown), ^bb3(%3 : !verona.unknown)
  ^bb2(%6: !verona.unknown):  // pred: ^bb1
    %7 = verona.call "apply"[%arg0 : !verona.class<"U64">] ( : ) : !verona.unknown
    %8 = verona.call "next"[%arg0 : !verona.class<"U64">] ( : ) : !verona.unknown
    %9 = verona.call "foo"[%7 : !verona.unknown] ( : ) : !verona.unknown
    %10 = "verona.constant(5)"() : () -> !verona.class<"int">
    %11 = verona.call ">"[%7 : !verona.unknown] (%10 : !verona.class<"int">) : !verona.unknown
    %12 = "verona.cast"(%11) : (!verona.unknown) -> i1
    cond_br %12, ^bb4, ^bb5
  ^bb3(%13: !verona.unknown):  // 2 preds: ^bb1, ^bb4
    return
  ^bb4:  // pred: ^bb2
    br ^bb3(%7 : !verona.unknown)
  ^bb5:  // pred: ^bb2
    %14 = "verona.constant(2)"() : () -> !verona.class<"int">
    %15 = verona.call "<"[%7 : !verona.unknown] (%14 : !verona.class<"int">) : !verona.unknown
    %16 = "verona.cast"(%15) : (!verona.unknown) -> i1
    cond_br %16, ^bb7, ^bb8
  ^bb6:  // pred: ^bb9
    br ^bb1(%7 : !verona.unknown)
  ^bb7:  // pred: ^bb5
    br ^bb1(%7 : !verona.unknown)
  ^bb8:  // pred: ^bb5
    %17 = verona.call "foo"[%7 : !verona.unknown] ( : ) : !verona.unknown
    br ^bb9
  ^bb9:  // pred: ^bb8
    br ^bb6
  }
}