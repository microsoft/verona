module @"$module" {
  module @C {
  }
  module @D {
  }
  module @E {
    module @NestE {
    }
  }
  module @F {
  }
  module @G {
    func @foo(%arg0: !verona.class<"U32">) -> !verona.class<"F32"> attributes {class = !verona.class<"G", "$parent" : class<"$module">>, qualifiers = ["static"]} {
      %0 = "verona.constant(3.14)"() : () -> !verona.class<"float">
      %1 = "verona.cast"(%0) : (!verona.class<"float">) -> !verona.class<"F32">
      return %1 : !verona.class<"F32">
    }
    func @baz(%arg0: !verona.class<"F32">) -> !verona.class<"F32"> attributes {class = !verona.class<"G", "$parent" : class<"$module">>, qualifiers = ["static"]} {
      %0 = "verona.constant(42)"() : () -> !verona.class<"int">
      %1 = verona.static !verona.class<"G", "$parent" : class<"$module">> : !verona<"">
      %2 = verona.call "foo"[%1 : !verona<"">] (%0 : !verona.class<"int">) : !verona.unknown
      %3 = verona.call "+"[%arg0 : !verona.class<"F32">] (%2 : !verona.unknown) : !verona.unknown
      %4 = "verona.cast"(%3) : (!verona.unknown) -> !verona.class<"F32">
      return %4 : !verona.class<"F32">
    }
  }
  module @POD {
  }
  func @bar(%arg0: !verona.class<"C", "$parent" : class<"$module">>, %arg1: !verona.class<"D", "$parent" : class<"$module">, "f" : meet<class<"U64">, imm>, "g" : meet<class<"C", "$parent" : class<"$module">>, mut>, "h" : class<"F32">, "i" : class<"F64">, "j" : class<"bool">>, %arg2: !verona.class<"E", "$parent" : class<"$module">, "a" : class<"D", "$parent" : class<"$module">, "f" : meet<class<"U64">, imm>, "g" : meet<class<"C", "$parent" : class<"$module">>, mut>, "h" : class<"F32">, "i" : class<"F64">, "j" : class<"bool">>, "b" : class<"E">, "c" : class<"F", "$parent" : class<"$module">, "e" : class<"G", "$parent" : class<"$module">>>, "d" : class<"G", "$parent" : class<"$module">>>, %arg3: !verona.class<"NestE", "$parent" : class<"E", "$parent" : class<"$module">, "a" : class<"D", "$parent" : class<"$module">, "f" : meet<class<"U64">, imm>, "g" : meet<class<"C", "$parent" : class<"$module">>, mut>, "h" : class<"F32">, "i" : class<"F64">, "j" : class<"bool">>, "b" : class<"E">, "c" : class<"F", "$parent" : class<"$module">, "e" : class<"G", "$parent" : class<"$module">>>, "d" : class<"G", "$parent" : class<"$module">>>, "x" : class<"G", "$parent" : class<"$module">>>, %arg4: !verona.class<"F", "$parent" : class<"$module">, "e" : class<"G", "$parent" : class<"$module">>>, %arg5: !verona.class<"G", "$parent" : class<"$module">>) attributes {class = !verona.class<"$module">} {
    %0 = verona.new_region @C [] : !verona.class<"C", "$parent" : class<"$module">>
    %1 = "verona.cast"(%0) : (!verona.class<"C", "$parent" : class<"$module">>) -> !verona.meet<class<"C", "$parent" : class<"$module">>, iso>
    %2 = verona.new_object @C [] in(%1 : !verona.meet<class<"C", "$parent" : class<"$module">>, iso>) : !verona.class<"C", "$parent" : class<"$module">>
    %3 = "verona.cast"(%2) : (!verona.class<"C", "$parent" : class<"$module">>) -> !verona.meet<class<"C", "$parent" : class<"$module">>, iso>
    %4 = "verona.constant(42)"() : () -> !verona.class<"int">
    %5 = "verona.constant(3.14)"() : () -> !verona.class<"float">
    %6 = verona.new_region @POD ["a", "b"](%4, %5 : !verona.class<"int">, !verona.class<"float">) : !verona.class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>
    %7 = "verona.cast"(%6) : (!verona.class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>) -> !verona.meet<class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>, iso>
    %8 = "verona.constant(21)"() : () -> !verona.class<"int">
    %9 = "verona.constant(2.72)"() : () -> !verona.class<"float">
    %10 = verona.new_object @POD ["a", "b"](%8, %9 : !verona.class<"int">, !verona.class<"float">) in(%7 : !verona.meet<class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>, iso>) : !verona.class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>
    %11 = "verona.cast"(%10) : (!verona.class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>) -> !verona.meet<class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>, iso>
    %12 = verona.field_read %7["a"] : !verona.meet<class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>, iso> -> !verona.unknown
    %13 = "verona.cast"(%12) : (!verona.unknown) -> !verona.meet<class<"U32">, mut>
    %14 = verona.field_read %11["a"] : !verona.meet<class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>, iso> -> !verona.unknown
    %15 = "verona.cast"(%14) : (!verona.unknown) -> !verona.meet<class<"U32">, mut>
    %16 = verona.call "+"[%13 : !verona.meet<class<"U32">, mut>] (%15 : !verona.meet<class<"U32">, mut>) : !verona.unknown
    %17 = verona.field_write %11["a"], %16 : !verona.meet<class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>, iso> -> !verona.unknown -> !verona.unknown
    %18 = verona.field_read %11["a"] : !verona.meet<class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>, iso> -> !verona.unknown
    %19 = verona.field_write %7["a"], %18 : !verona.meet<class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>, iso> -> !verona.unknown -> !verona.unknown
    %20 = "verona.constant(1337)"() : () -> !verona.class<"int">
    %21 = "verona.cast"(%20) : (!verona.class<"int">) -> !verona.unknown
    %22 = verona.field_write %7["a"], %21 : !verona.meet<class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>, iso> -> !verona.unknown -> !verona.unknown
    %23 = verona.field_write %11["a"], %22 : !verona.meet<class<"POD", "$parent" : class<"$module">, "a" : class<"U32">, "b" : class<"F64">>, iso> -> !verona.unknown -> !verona.unknown
    %24 = "verona.constant(13)"() : () -> !verona.class<"int">
    %25 = verona.static !verona.class<"G", "$parent" : class<"$module">> : !verona<"">
    %26 = verona.call "foo"[%25 : !verona<"">] (%24 : !verona.class<"int">) : !verona.unknown
    %27 = "verona.cast"(%26) : (!verona.unknown) -> !verona.class<"F32">
    %28 = verona.static !verona.class<"G", "$parent" : class<"$module">> : !verona<"">
    %29 = verona.call "baz"[%28 : !verona<"">] (%27 : !verona.class<"F32">) : !verona.unknown
    %30 = "verona.cast"(%29) : (!verona.unknown) -> !verona.class<"F32">
    verona.tidy %arg0 : !verona.class<"C", "$parent" : class<"$module">>
    verona.drop %arg1 : !verona.class<"D", "$parent" : class<"$module">, "f" : meet<class<"U64">, imm>, "g" : meet<class<"C", "$parent" : class<"$module">>, mut>, "h" : class<"F32">, "i" : class<"F64">, "j" : class<"bool">>
    return
  }
}