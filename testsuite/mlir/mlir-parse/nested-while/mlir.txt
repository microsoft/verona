module @"$module"  {
  func private @f(%arg0: !verona.class<"S64">) -> !verona.class<"S64"> attributes {class = !verona.class<"$module">} {
    %0 = "verona.alloca"() : () -> !verona.class<"S64">
    %1 = "verona.store"(%arg0, %0) : (!verona.class<"S64">, !verona.class<"S64">) -> !verona.unknown
    br ^bb1
  ^bb1:  // 2 preds: ^bb0, ^bb6
    %2 = "verona.load"(%0) : (!verona.class<"S64">) -> !verona.unknown
    %3 = "verona.constant(50)"() : () -> !verona.class<"int">
    %4 = verona.call "<"[%2 : !verona.unknown] (%3 : !verona.class<"int">) : !verona.unknown
    %5 = "verona.cast"(%4) : (!verona.unknown) -> i1
    cond_br %5, ^bb2, ^bb3
  ^bb2:  // pred: ^bb1
    %6 = "verona.constant(1)"() : () -> !verona.class<"int">
    %7 = "verona.alloca"() : () -> !verona.unknown
    %8 = "verona.store"(%6, %7) : (!verona.class<"int">, !verona.unknown) -> !verona.unknown
    br ^bb4
  ^bb3:  // pred: ^bb1
    %9 = "verona.load"(%0) : (!verona.class<"S64">) -> !verona.unknown
    %10 = "verona.cast"(%9) : (!verona.unknown) -> !verona.class<"S64">
    return %10 : !verona.class<"S64">
  ^bb4:  // 2 preds: ^bb2, ^bb5
    %11 = "verona.load"(%7) : (!verona.unknown) -> !verona.unknown
    %12 = "verona.constant(10)"() : () -> !verona.class<"int">
    %13 = verona.call "<"[%11 : !verona.unknown] (%12 : !verona.class<"int">) : !verona.unknown
    %14 = "verona.cast"(%13) : (!verona.unknown) -> i1
    cond_br %14, ^bb5, ^bb6
  ^bb5:  // pred: ^bb4
    %15 = "verona.load"(%7) : (!verona.unknown) -> !verona.unknown
    %16 = "verona.load"(%0) : (!verona.class<"S64">) -> !verona.unknown
    %17 = verona.call "+"[%15 : !verona.unknown] (%16 : !verona.unknown) : !verona.unknown
    %18 = "verona.store"(%17, %7) : (!verona.unknown, !verona.unknown) -> !verona.unknown
    br ^bb4
  ^bb6:  // pred: ^bb4
    %19 = "verona.load"(%7) : (!verona.unknown) -> !verona.unknown
    %20 = "verona.store"(%19, %0) : (!verona.unknown, !verona.class<"S64">) -> !verona.unknown
    br ^bb1
  }
}
