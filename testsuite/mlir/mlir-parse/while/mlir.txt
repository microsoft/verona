module @"$module" {
  func @f(%arg0: !verona.class<"U32">) -> !verona.class<"U32"> attributes {class = !verona.class<"$module">} {
    %0 = "verona.cast"(%arg0) : (!verona.class<"U32">) -> !verona.unknown
    br ^bb1(%0 : !verona.unknown)
  ^bb1(%1: !verona.unknown):  // 2 preds: ^bb0, ^bb2
    %2 = "verona.constant(5)"() : () -> !verona.class<"int">
    %3 = verona.call "<"[%1 : !verona.unknown] (%2 : !verona.class<"int">) : !verona.unknown
    %4 = "verona.cast"(%3) : (!verona.unknown) -> i1
    cond_br %4, ^bb2(%1 : !verona.unknown), ^bb3(%1 : !verona.unknown)
  ^bb2(%5: !verona.unknown):  // pred: ^bb1
    %6 = "verona.constant(1)"() : () -> !verona.class<"int">
    %7 = verona.call "+"[%5 : !verona.unknown] (%6 : !verona.class<"int">) : !verona.unknown
    br ^bb1(%7 : !verona.unknown)
  ^bb3(%8: !verona.unknown):  // pred: ^bb1
    br ^bb4(%8 : !verona.unknown)
  ^bb4(%9: !verona.unknown):  // 2 preds: ^bb3, ^bb5
    %10 = "verona.constant(false)"() : () -> !verona.class<"bool">
    %11 = "verona.cast"(%10) : (!verona.class<"bool">) -> i1
    cond_br %11, ^bb5(%9 : !verona.unknown), ^bb6(%9 : !verona.unknown)
  ^bb5(%12: !verona.unknown):  // pred: ^bb4
    %13 = "verona.constant(1)"() : () -> !verona.class<"int">
    %14 = verona.call "-"[%12 : !verona.unknown] (%13 : !verona.class<"int">) : !verona.unknown
    br ^bb4(%14 : !verona.unknown)
  ^bb6(%15: !verona.unknown):  // pred: ^bb4
    %16 = "verona.cast"(%15) : (!verona.unknown) -> !verona.class<"U32">
    return %16 : !verona.class<"U32">
  }
}