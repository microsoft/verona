

module {
  func @empty_declaration() attributes {class = !verona.class<"$module">}
  func @single_arg(!verona.class<"S16">) attributes {class = !verona.class<"$module">}
  func @args_and_ret(!verona.class<"U32">, !verona.class<"S32">) -> !verona.class<"F64"> attributes {class = !verona.class<"$module">}
  func @empty_return() attributes {class = !verona.class<"$module">} {
    return
  }
  func @foo(%arg0: !verona.imm, %arg1: !verona.meet<class<"U64">, imm>) -> !verona.meet<class<"U64">, imm> attributes {class = !verona.class<"$module">} {
    %0 = "verona.alloca"() : () -> !verona.imm
    %1 = "verona.store"(%arg0, %0) : (!verona.imm, !verona.imm) -> !verona.unknown
    %2 = "verona.alloca"() : () -> !verona.meet<class<"U64">, imm>
    %3 = "verona.store"(%arg1, %2) : (!verona.meet<class<"U64">, imm>, !verona.meet<class<"U64">, imm>) -> !verona.unknown
    %4 = verona.call "+"[%0 : !verona.imm] (%2, !verona.meet<class<"U64">, imm>) : !verona.unknown
    %5 = "verona.alloca"() : () -> !verona.unknown
    %6 = "verona.store"(%4, %5) : (!verona.unknown, !verona.unknown) -> !verona.unknown
    %7 = "verona.load"(%5) : (!verona.unknown) -> !verona.unknown
    %8 = "verona.alloca"() : () -> !verona.meet<class<"U64">, imm>
    %9 = "verona.store"(%7, %8) : (!verona.unknown, !verona.meet<class<"U64">, imm>) -> !verona.unknown
    %10 = "verona.load"(%5) : (!verona.unknown) -> !verona.unknown
    %11 = "verona.cast"(%10) : (!verona.unknown) -> !verona.meet<class<"U64">, imm>
    return %11 : !verona.meet<class<"U64">, imm>
  }
  func @apply() attributes {class = !verona.class<"$module">} {
    return
  }
}