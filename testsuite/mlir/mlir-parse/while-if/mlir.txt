module @"$module" {
  func @f(%arg0: !verona.class<"U32">, %arg1: !verona.class<"S32">) -> !verona.class<"U32"> attributes {class = !verona.class<"$module">} {
    %0 = "verona.cast"(%arg0) : (!verona.class<"U32">) -> !verona.unknown
    br ^bb1(%0 : !verona.unknown)
  ^bb1(%1: !verona.unknown):  // 2 preds: ^bb0, ^bb5
    %2 = "verona.constant(5)"() : () -> !verona.class<"int">
    %3 = verona.call "<"[%1 : !verona.unknown] (%2 : !verona.class<"int">) : !verona.unknown
    %4 = "verona.cast"(%3) : (!verona.unknown) -> i1
    cond_br %4, ^bb2(%1 : !verona.unknown), ^bb3(%1 : !verona.unknown)
  ^bb2(%5: !verona.unknown):  // pred: ^bb1
    %6 = verona.call "!="[%5 : !verona.unknown] (%arg1 : !verona.class<"S32">) : !verona.unknown
    %7 = "verona.cast"(%6) : (!verona.unknown) -> i1
    cond_br %7, ^bb4, ^bb5(%5 : !verona.unknown)
  ^bb3(%8: !verona.unknown):  // pred: ^bb1
    %9 = "verona.cast"(%8) : (!verona.unknown) -> !verona.class<"U32">
    return %9 : !verona.class<"U32">
  ^bb4:  // pred: ^bb2
    %10 = "verona.constant(1)"() : () -> !verona.class<"int">
    %11 = verona.call "+"[%5 : !verona.unknown] (%10 : !verona.class<"int">) : !verona.unknown
    br ^bb5(%5 : !verona.unknown)
  ^bb5(%12: !verona.unknown):  // 2 preds: ^bb2, ^bb4
    br ^bb1(%5 : !verona.unknown)
  }
}