module  {
  func @bar(%arg0: !verona.meet<class<"U64">, imm>, %arg1: !verona.meet<class<"U64">, imm>) {
    %0 = verona.new_region @C [] : !verona.meet<class<"C", "$parent" : class<"$module">>, iso>
    %1 = verona.view %0 : !verona.meet<class<"C", "$parent" : class<"$module">>, iso> -> !verona.meet<class<"C", "$parent" : class<"$module">>, mut>
    %2 = verona.new_object @D ["f", "g"](%arg0, %1 : !verona.meet<class<"U64">, imm>, !verona.meet<class<"C", "$parent" : class<"$module">>, mut>) in(%0 : !verona.meet<class<"C", "$parent" : class<"$module">>, iso>) : !verona.meet<class<"D", "$parent" : class<"$module">, "f" : meet<class<"U64">, imm>, "g" : meet<class<"C", "$parent" : class<"$module">>, mut>, "h" : meet<class<"S32">, mut>, "h" : class<"F32">, "i" : class<"F64">, "j" : class<"bool">>, mut>
    %3 = verona.field_read %2["f"] : !verona.meet<class<"D", "$parent" : class<"$module">, "f" : meet<class<"U64">, imm>, "g" : meet<class<"C", "$parent" : class<"$module">>, mut>, "h" : meet<class<"S32">, mut>, "h" : class<"F32">, "i" : class<"F64">, "j" : class<"bool">>, mut> -> !verona.meet<class<"U64">, imm>
    %4 = verona.field_read %2["g"] : !verona.meet<class<"D", "$parent" : class<"$module">, "f" : meet<class<"U64">, imm>, "g" : meet<class<"C", "$parent" : class<"$module">>, mut>, "h" : meet<class<"S32">, mut>, "h" : class<"F32">, "i" : class<"F64">, "j" : class<"bool">>, mut> -> !verona.meet<class<"C", "$parent" : class<"$module">>, mut>
    %5 = verona.field_write %2["f"], %arg1 : !verona.meet<class<"D", "$parent" : class<"$module">, "f" : meet<class<"U64">, imm>, "g" : meet<class<"C", "$parent" : class<"$module">>, mut>, "h" : meet<class<"S32">, mut>, "h" : class<"F32">, "i" : class<"F64">, "j" : class<"bool">>, mut> -> !verona.meet<class<"U64">, imm> -> !verona.meet<class<"U64">, imm>
    verona.tidy %0 : !verona.meet<class<"C", "$parent" : class<"$module">>, iso>
    verona.drop %0 : !verona.meet<class<"C", "$parent" : class<"$module">>, iso>
    return
  }
}
