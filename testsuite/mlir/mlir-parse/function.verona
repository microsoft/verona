// Copyright Microsoft and Project Verona Contributors.
// SPDX-License-Identifier: MIT

// RUN: verona-mlir %s -o - | FileCheck %s

// CHECK: func @foo(%arg0: !type.imm, %arg1: !type<"U64&imm">) -> !type<"U64&imm"> {
foo(a: N, b: U64 & imm): R
  where N: imm
  where R: U64 & imm
{
  // CHECK: "verona.add"(%arg0, %arg1) : (!type.imm, !type<"U64&imm">) -> !type.ret
  let x = a + b;
  // This is just an alias to x
  let r: R = x;
  // CHECK: "verona.cast"(%{{.*}}) : (!type.ret) -> !type<"U64&imm">
  // CHECK: return %1 : !type<"U64&imm">
  x
}

// CHECK: func @apply() -> none
// CHECK: "verona.none"() : () -> none
// CHECK: return %{{.*}} : none
(){}
