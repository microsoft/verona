module @"$module" {
  func @for_sum(%arg0: !verona.class<"List">) -> !verona.class<"U32"> attributes {class = !verona.class<"$module">} {
    %0 = "verona.constant(0)"() : () -> !verona.class<"int">
    %1 = "verona.cast"(%0) : (!verona.class<"int">) -> !verona.class<"U32">
    %2 = verona.call "values"[%arg0 : !verona.class<"List">] ( : ) : !verona.unknown
    %3 = "verona.cast"(%1) : (!verona.class<"U32">) -> !verona.unknown
    br ^bb1(%3 : !verona.unknown)
  ^bb1(%4: !verona.unknown):  // 2 preds: ^bb0, ^bb2
    %5 = verona.call "has_value"[%2 : !verona.unknown] ( : ) : !verona.unknown
    %6 = "verona.cast"(%5) : (!verona.unknown) -> i1
    cond_br %6, ^bb2(%4 : !verona.unknown), ^bb3(%4 : !verona.unknown)
  ^bb2(%7: !verona.unknown):  // pred: ^bb1
    %8 = verona.call "apply"[%2 : !verona.unknown] ( : ) : !verona.unknown
    %9 = verona.call "next"[%2 : !verona.unknown] ( : ) : !verona.unknown
    %10 = verona.call "+"[%7 : !verona.unknown] (%8 : !verona.unknown) : !verona.unknown
    br ^bb1(%7 : !verona.unknown)
  ^bb3(%11: !verona.unknown):  // pred: ^bb1
    %12 = "verona.cast"(%11) : (!verona.unknown) -> !verona.class<"U32">
    return %12 : !verona.class<"U32">
  }
  func @while_sum(%arg0: !verona.class<"List">) -> !verona.class<"U32"> attributes {class = !verona.class<"$module">} {
    %0 = "verona.constant(0)"() : () -> !verona.class<"int">
    %1 = "verona.cast"(%0) : (!verona.class<"int">) -> !verona.class<"U32">
    %2 = verona.call "values"[%arg0 : !verona.class<"List">] ( : ) : !verona.unknown
    %3 = "verona.cast"(%1) : (!verona.class<"U32">) -> !verona.unknown
    br ^bb1(%3 : !verona.unknown)
  ^bb1(%4: !verona.unknown):  // 2 preds: ^bb0, ^bb2
    %5 = verona.call "has_value"[%2 : !verona.unknown] ( : ) : !verona.unknown
    %6 = "verona.cast"(%5) : (!verona.unknown) -> i1
    cond_br %6, ^bb2(%4 : !verona.unknown), ^bb3(%4 : !verona.unknown)
  ^bb2(%7: !verona.unknown):  // pred: ^bb1
    %8 = verona.call "apply"[%2 : !verona.unknown] ( : ) : !verona.unknown
    %9 = verona.call "next"[%2 : !verona.unknown] ( : ) : !verona.unknown
    %10 = verona.call "+"[%7 : !verona.unknown] (%8 : !verona.unknown) : !verona.unknown
    br ^bb1(%7 : !verona.unknown)
  ^bb3(%11: !verona.unknown):  // pred: ^bb1
    %12 = "verona.cast"(%11) : (!verona.unknown) -> !verona.class<"U32">
    return %12 : !verona.class<"U32">
  }
}