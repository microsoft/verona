module @"$module" {
  func @f(%arg0: !verona.class<"U32">, %arg1: !verona.class<"S32">) -> !verona.class<"F16"> attributes {class = !verona.class<"$module">} {
    %0 = "verona.cast"(%arg0) : (!verona.class<"U32">) -> !verona.unknown
    br ^bb1(%0 : !verona.unknown)
  ^bb1(%1: !verona.unknown):  // 3 preds: ^bb0, ^bb4, ^bb7
    %2 = "verona.constant(5)"() : () -> !verona.class<"int">
    %3 = verona.call "<"[%1 : !verona.unknown] (%2 : !verona.class<"int">) : !verona.unknown
    %4 = "verona.cast"(%3) : (!verona.unknown) -> i1
    cond_br %4, ^bb2(%1 : !verona.unknown), ^bb3(%1 : !verona.unknown)
  ^bb2(%5: !verona.unknown):  // pred: ^bb1
    %6 = "verona.constant(1)"() : () -> !verona.class<"int">
    %7 = verona.call "+"[%5 : !verona.unknown] (%6 : !verona.class<"int">) : !verona.unknown
    %8 = verona.call "<"[%7 : !verona.unknown] (%arg1 : !verona.class<"S32">) : !verona.unknown
    %9 = "verona.cast"(%8) : (!verona.unknown) -> i1
    cond_br %9, ^bb4, ^bb5
  ^bb3(%10: !verona.unknown):  // 2 preds: ^bb1, ^bb6
    %11 = "verona.cast"(%10) : (!verona.unknown) -> !verona.class<"F16">
    return %11 : !verona.class<"F16">
  ^bb4:  // pred: ^bb2
    br ^bb1(%7 : !verona.unknown)
  ^bb5:  // pred: ^bb2
    %12 = verona.call ">"[%7 : !verona.unknown] (%arg1 : !verona.class<"S32">) : !verona.unknown
    %13 = "verona.cast"(%12) : (!verona.unknown) -> i1
    cond_br %13, ^bb6, ^bb7
  ^bb6:  // pred: ^bb5
    br ^bb3(%7 : !verona.unknown)
  ^bb7:  // pred: ^bb5
    br ^bb1(%7 : !verona.unknown)
  }
}