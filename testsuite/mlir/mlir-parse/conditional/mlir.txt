

module {
  func @f(%arg0: !verona.U16) -> !verona.S16 attributes {class = !verona.class<"$module">} {
    %0 = "verona.alloca"() : () -> !verona.U16
    %1 = "verona.store"(%arg0, %0) : (!verona.U16, !verona.U16) -> !verona.unk
    %2 = "verona.constant(2)"() : () -> !verona.S64
    %3 = "verona.lt"(%0, %2) : (!verona.U16, !verona.S64) -> i1
    cond_br %3, ^bb1, ^bb2
  ^bb1:  // pred: ^bb0
    %4 = "verona.constant(1)"() : () -> !verona.S64
    %5 = "verona.add"(%0, %4) : (!verona.U16, !verona.S64) -> !verona.unk
    %6 = "verona.store"(%5, %0) : (!verona.unk, !verona.U16) -> !verona.unk
    br ^bb3
  ^bb2:  // pred: ^bb0
    %7 = "verona.constant(true)"() : () -> !verona.bool
    %8 = "verona.cast"(%7) : (!verona.bool) -> i1
    cond_br %8, ^bb4, ^bb5
  ^bb3:  // 2 preds: ^bb1, ^bb6
    %9 = "verona.cast"(%0) : (!verona.U16) -> !verona.S16
    return %9 : !verona.S16
  ^bb4:  // pred: ^bb2
    %10 = "verona.constant(1)"() : () -> !verona.S64
    %11 = "verona.sub"(%0, %10) : (!verona.U16, !verona.S64) -> !verona.unk
    %12 = "verona.store"(%11, %0) : (!verona.unk, !verona.U16) -> !verona.unk
    br ^bb6
  ^bb5:  // pred: ^bb2
    %13 = "verona.constant(0)"() : () -> !verona.S64
    %14 = "verona.store"(%13, %0) : (!verona.S64, !verona.U16) -> !verona.unk
    br ^bb6
  ^bb6:  // 2 preds: ^bb4, ^bb5
    br ^bb3
  }
}