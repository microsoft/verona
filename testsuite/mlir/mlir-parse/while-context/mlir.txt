

module {
  func @f(%arg0: !verona.F32) -> !verona.F64 attributes {class = !verona.class<"$module">} {
    %0 = "verona.alloca"() : () -> !verona.F32
    %1 = "verona.store"(%arg0, %0) : (!verona.F32, !verona.F32) -> !verona.unknown
    %2 = "verona.constant(1)"() : () -> !verona.S64
    %3 = "verona.alloca"() : () -> !verona.unknown
    %4 = "verona.store"(%2, %3) : (!verona.S64, !verona.unknown) -> !verona.unknown
    br ^bb1
  ^bb1:  // 2 preds: ^bb0, ^bb2
    %5 = "verona.constant(5)"() : () -> !verona.S64
    %6 = "verona.lt"(%0, %5) : (!verona.F32, !verona.S64) -> i1
    cond_br %6, ^bb2, ^bb3
  ^bb2:  // pred: ^bb1
    %7 = "verona.constant(2)"() : () -> !verona.S64
    %8 = "verona.alloca"() : () -> !verona.unknown
    %9 = "verona.store"(%7, %8) : (!verona.S64, !verona.unknown) -> !verona.unknown
    %10 = "verona.load"(%8) : (!verona.unknown) -> !verona.unknown
    %11 = "verona.constant(3)"() : () -> !verona.S64
    %12 = "verona.add"(%10, %11) : (!verona.unknown, !verona.S64) -> !verona.unknown
    %13 = "verona.alloca"() : () -> !verona.unknown
    %14 = "verona.store"(%12, %13) : (!verona.unknown, !verona.unknown) -> !verona.unknown
    %15 = "verona.load"(%13) : (!verona.unknown) -> !verona.unknown
    %16 = "verona.add"(%0, %15) : (!verona.F32, !verona.unknown) -> !verona.unknown
    %17 = "verona.store"(%16, %0) : (!verona.unknown, !verona.F32) -> !verona.unknown
    br ^bb1
  ^bb3:  // pred: ^bb1
    %18 = "verona.cast"(%0) : (!verona.F32) -> !verona.F64
    return %18 : !verona.F64
  }
}