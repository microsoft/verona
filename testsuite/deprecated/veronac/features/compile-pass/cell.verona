// Copyright Microsoft and Project Verona Contributors.
// SPDX-License-Identifier: MIT
class Cell[X] {
  fvalue: X | (None & iso);

  create(value: X | (None & iso)): (Cell[X] & iso) {
    var cell = new Cell;
    cell.fvalue = value;
    cell
  }

  empty(): (Cell[X] & iso) {
    Cell.create(new None)
  }

  write(self: mut, value: X) {
    self.fvalue = value;
  }

  extract(self: mut): X | (None & iso) {
    self.fvalue = new None
  }
}

class A { }
class B { }
class C { }
class D { }

class Main
{
  main() { }

  foo() : (A | B | C | D | None) & iso {
    var x = mut-view(Cell.empty());
    x.write(new A);
    x.write(new B);
    x.write(new C);
    x.write(new D);
    x.extract()
  }
}

